class Node:
    def __init__(self, e):
        self.data = e
        self.link = None
        
    


class LinkedList:
    def __init__(self):
        self.head = None
    def getNode(self, pos):
        if pos < 0:
            return None
        node = self.head
        while pos >0 or node !=None:
            pos-=1
            node = node.link
        return node
        
    def getEntry(self, pos):
        node = self.getNode(pos)
        if node == None:return None
        else:return node.data

    def size(self):
        count = 0
        current = self.head
        while current != None:
            count+=1
            current = current.link
        return count
        
    def nodeCount(self, node):
        if node == None:
            return 0
        else:
            return self.nodeCount(node.link)+1

    def insert(self, pos, e):
        if pos < 0 or pos > self.size():
            print("위치 error")
            return None
        node = Node(e)
        before = self.getNode(pos-1)
        if before == None:
            node.link = self.head
            self.head = node
        else:
            node.link = before.link
            before.link = node
            
    def delete(self, pos):
        if pos < 0 or pos >= self.size():
            print("위치 error")
            return None
        before = self.getNode(pos-1)
        if before == None:
            e = self.head.data
            self.head = self.head.link
        else:
            e = before.link.data
            before.link= before.link.link
        return e

    def printList(self):
        node = self.head
        
        while node != None:
            print(node.data)
            node = node.link
